spring:
  application:
    name: "gatewayserver"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud: #eureka keşif sunucusuna bağlan ve mikroservisler hakkındaki ayrıntıları al
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

management: #actuator icin dsardan sunucu durumunu takip etmek icin api acar
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics: # prometheus tarafından kullanılan bilgiler,aktif et
    tags:
      application: ${spring.application.name}

info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank Gateway Server Application"
    version: "1.0.0"

logging:
  level:
    com:
      micro:
        gatewayserver: DEBUG

#servisler uzun sure cevap vermediginde circuitbreaker kullaniyoruz
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 #baslangicta en az kac istegi izlemesi gerektigini belirler
      permittedNumberOfCallsInHalfOpenState: 2 # devre kesici modeli bir kez acik duruma gectiginde sonsuza kadar asla acik kalmamali.Periyodik olarak yari acik druma gececek
      failureRateThreshold: 50 # isteklerin yuzde ellisi basarisiz olusa devre kesici modeli kapalı durumdan acik duruma gecebilir
      waitDurationInOpenState: 10000 #acik durumda bekleme suresi

